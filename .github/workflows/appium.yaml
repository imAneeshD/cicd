name: Appium Mobile Test Workflow

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Allows manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Install .NET 8.0 to fix SDK error
      - name: Set up .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      # ✅ Install Java 17 for Appium and tests
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # ✅ Install Java 8 for `sdkmanager`
      - name: Install Java 8 (For SDK Manager)
        run: |
          sudo apt update
          sudo apt install -y openjdk-8-jdk
          echo "JAVA8_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
          echo "✅ Java 8 Installed!"

      # ✅ Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3 

      # ✅ Use Java 8 for `sdkmanager` Execution
      - name: Install Android Emulator Components
        run: |
          export JAVA_HOME=$JAVA8_HOME
          export PATH=$JAVA_HOME/bin:$PATH
          
          java -version  # Confirm Java 8 is active
          
          sdkmanager --install "platform-tools" "platforms;android-35" "system-images;android-35;google_apis;x86_64" "emulator"
          sdkmanager --licenses
          
          echo "✅ Android SDK Installed!"

      # ✅ Ensure SDK Path is Correct
      - name: Set Android SDK Environment Variables
        run: |
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/tools/bin" >> $GITHUB_PATH
          echo "✅ Android SDK paths set!"

      # ✅ Create Android Virtual Device (AVD)
      - name: Create Android Virtual Device
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_emulator \
            -k "system-images;android-35;google_apis;x86_64" \
            --device "pixel_4"

      # ✅ Start Android Emulator
      - name: Start Android Emulator
        timeout-minutes: 15
        run: |
          $ANDROID_HOME/emulator/emulator -avd test_emulator -no-window -no-audio -gpu swiftshader_indirect -verbose &
          
          MAX_WAIT=300
          ELAPSED=0
          while [ $ELAPSED -lt $MAX_WAIT ]; do
            sleep 10
            ELAPSED=$((ELAPSED + 10))
            
            echo "Checking emulator..."
            adb devices -l
            
            BOOT_COMPLETED=$(adb shell getprop sys.boot_completed | tr -d '\r')
            echo "Boot completed: $BOOT_COMPLETED"

            if [ "$BOOT_COMPLETED" = "1" ]; then
              echo "✅ Emulator fully booted!"
              break
            fi
          done

          adb devices -l

      # ✅ Run Appium Tests
      - name: Run Appium Tests
        run: dotnet test

      # ✅ Upload Test Results (Optional)
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults/
